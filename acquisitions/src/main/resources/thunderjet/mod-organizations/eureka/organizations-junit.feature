Feature: mod-organizations integration tests

  Background:
    * url baseUrl
    * table modules
      | name                        |
      | 'mod-configuration'         |
      | 'mod-login'                 |
      | 'mod-users'                 |
      | 'mod-permissions'           |
      | 'mod-audit'                 |
      | 'mod-orders-storage'        |
      | 'mod-organizations'         |
      | 'mod-organizations-storage' |

    * table userPermissions
      | name                                                        |
      | 'acquisition.invoice.events.get'                            |
      | 'acquisition.invoice-line.events.get'                       |
      | 'acquisitions-units.memberships.item.delete'                |
      | 'acquisitions-units.memberships.item.get'                   |
      | 'acquisitions-units.memberships.item.post'                  |
      | 'acquisitions-units.units.item.post'                        |
      | 'acquisitions-units-storage.memberships.collection.get'     |
      | 'acquisitions-units-storage.memberships.item.delete'        |
      | 'acquisitions-units-storage.memberships.item.post'          |
      | 'acquisitions-units-storage.memberships.item.put'           |
      | 'acquisitions-units-storage.units.item.delete'              |
      | 'acquisitions-units-storage.units.item.get'                 |
      | 'acquisitions-units-storage.units.item.post'                |
      | 'acquisitions-units-storage.units.item.put'                 |
      | 'batch-groups.collection.get'                               |
      | 'batch-groups.item.post'                                    |
      | 'batch-voucher.batch-voucher-exports.item.get'              |
      | 'batch-voucher.batch-voucher-exports.item.post'             |
      | 'batch-voucher.batch-vouchers.item.get'                     |
      | 'batch-voucher.export-configurations.credentials.item.post' |
      | 'batch-voucher.export-configurations.item.post'             |
      | 'configuration.entries.collection.get'                      |
      | 'configuration.entries.item.delete'                         |
      | 'configuration.entries.item.post'                           |
      | 'configuration.entries.item.put'                            |
      | 'finance.budgets-expense-classes-totals.collection.get'     |
      | 'finance.budgets.collection.get'                            |
      | 'finance.budgets.item.delete'                               |
      | 'finance.budgets.item.get'                                  |
      | 'finance.budgets.item.post'                                 |
      | 'finance.budgets.item.put'                                  |
      | 'finance.expense-classes.item.post'                         |
      | 'finance.fiscal-years.item.delete'                          |
      | 'finance.fiscal-years.item.get'                             |
      | 'finance.fiscal-years.item.post'                            |
      | 'finance.fiscal-years.item.put'                             |
      | 'finance.fund-types.item.post'                              |
      | 'finance.funds.budget.item.get'                             |
      | 'finance.funds.collection.get'                              |
      | 'finance.funds.item.get'                                    |
      | 'finance.funds.item.put'                                    |
      | 'finance.groups-expense-classes-totals.collection.get'      |
      | 'finance.groups.item.post'                                  |
      | 'finance.group-fiscal-year-summaries.collection.get'        |
      | 'finance.group-fund-fiscal-years.item.post'                 |
      | 'finance.ledger-rollovers-budgets.collection.get'           |
      | 'finance.ledger-rollovers-budgets.item.get'                 |
      | 'finance.ledger-rollovers-errors.collection.get'            |
      | 'finance.ledger-rollovers-logs.collection.get'              |
      | 'finance.ledger-rollovers-logs.item.get'                    |
      | 'finance.ledger-rollovers-progress.collection.get'          |
      | 'finance.ledger-rollovers-progress.item.put'                |
      | 'finance.ledger-rollovers.item.post'                        |
      | 'finance.ledgers.collection.get'                            |
      | 'finance.ledgers.current-fiscal-year.item.get'              |
      | 'finance.ledgers.item.delete'                               |
      | 'finance.ledgers.item.get'                                  |
      | 'finance.ledgers.item.post'                                 |
      | 'finance.release-encumbrance.item.post'                     |
      | 'finance.transactions.batch.execute'                        |
      | 'finance.transactions.collection.get'                       |
      | 'finance.transactions.item.get'                             |
      | 'finance-storage.budget-expense-classes.collection.get'     |
      | 'finance-storage.budget-expense-classes.item.post'          |
      | 'finance-storage.budgets.item.get'                          |
      | 'finance-storage.budgets.item.post'                         |
      | 'finance-storage.funds.item.delete'                         |
      | 'finance-storage.funds.item.post'                           |
      | 'finance-storage.group-fund-fiscal-years.collection.get'    |
      | 'finance-storage.group-fund-fiscal-years.item.post'         |
      | 'finance-storage.ledger-rollovers-errors.collection.get'    |
      | 'finance-storage.ledger-rollovers.item.delete'              |
      | 'finance-storage.ledgers.item.post'                         |
      | 'finance-storage.transactions.batch.execute'                |
      | 'finance-storage.transactions.collection.get'               |
      | 'invoice.invoices.collection.get'                           |
      | 'invoice.invoices.documents.item.post'                      |
      | 'invoice.invoices.fiscal-years.collection.get'              |
      | 'invoice.invoices.item.delete'                              |
      | 'invoice.invoices.item.get'                                 |
      | 'invoice.invoices.item.post'                                |
      | 'invoice.invoices.item.put'                                 |
      | 'invoice.invoice-lines.collection.get'                      |
      | 'invoice.invoice-lines.item.delete'                         |
      | 'invoice.invoice-lines.item.get'                            |
      | 'invoice.invoice-lines.item.post'                           |
      | 'invoice.invoice-lines.item.put'                            |
      | 'invoice.item.approve.execute'                              |
      | 'invoice.item.cancel.execute'                               |
      | 'invoice.item.pay.execute'                                  |
      | 'inventory-storage.holdings.collection.get'                 |
      | 'inventory-storage.instances.item.get'                      |
      | 'inventory-storage.items.item.get'                          |
      | 'inventory.instances.item.post'                             |
      | 'organizations-storage.organizations.item.post'             |
      | 'organizations.organizations.item.get'                      |
      | 'organizations.organizations.item.post'                     |
      | 'organizations.organizations.item.put'                      |
      | 'orders-storage.claiming.process.execute'                   |
      | 'orders-storage.titles.item.get'                            |
      | 'orders.collection.get'                                     |
      | 'orders.item.approve'                                       |
      | 'orders.item.get'                                           |
      | 'orders.item.post'                                          |
      | 'orders.item.put'                                           |
      | 'orders.item.reopen'                                        |
      | 'orders.item.unopen'                                        |
      | 'orders.po-lines.collection.get'                            |
      | 'orders.po-lines.item.post'                                 |
      | 'organizations.organizations.collection.get'                |
      | 'users.collection.get'                                      |
      | 'acquisition.organization.events.get'                       |

  Scenario: Create tenant and users for testing
    * def testUser = testAdmin
    * call read('classpath:common/eureka/setup-users.feature')